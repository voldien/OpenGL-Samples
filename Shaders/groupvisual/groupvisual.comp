#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_compute_shader : enable
#extension GL_EXT_control_flow_attributes : enable

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

struct _instance_data_t {
	mat4 model;
	vec4 color;
};

layout(binding = 0) uniform UniformBufferBlock {
	mat4 model;
	mat4 view;
	mat4 proj;
	mat4 modelView;
	mat4 modelViewProjection;
}
ubo;

// Indirect drawing count
layout(std430, binding = 1) writeonly buffer IndirectWrite {
	uint count;
	uint instanceCount;
	uint firstIndex;
	uint baseVertex;
	uint baseInstance;
}
instances;

layout(std430, binding = 2) writeonly buffer InstanceModel { _instance_data_t instance[]; }
writeBuffer;

#define SHARED_MEMORY_SIZE 512
shared vec4 sharedPos[SHARED_MEMORY_SIZE];

void main() {

	if (gl_GlobalInvocationID.x == 0) {
		instances.instanceCount = 0;
	}

	uint globalIndex = 0;
	uint localIndex = 0;

	instances.count = 6 * 2 * 3;
	instances.instanceCount = 1;
	instances.firstIndex = 0;
	instances.baseVertex = 0;
	instances.baseInstance = 0;

	writeBuffer.instance[0].model = mat4(1);
}
