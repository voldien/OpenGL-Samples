#version 460 core
#extension GL_ARB_shading_language_include : enable
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(set = 0, binding = 0, r32f) uniform restrict writeonly image2D targetNormalTexture;

layout(push_constant) uniform Settings { layout(offset = 0) vec3 offset; }
settings;

#include "common.glsl"
#include "noise.glsl"

void main() {

	/*  */
	if (any(greaterThan(gl_GlobalInvocationID.xy, imageSize(targetNormalTexture)))) {
		return;
	}

	/*	Get pixel coordinate.	*/
	const ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
	const vec2 normalized_uv_coords = vec2(pixel_coords) / imageSize(targetNormalTexture);

	const float noise_height = noise(normalized_uv_coords.xyx + settings.offset);

	imageStore(targetNormalTexture, pixel_coords, vec4(noise_height));
}